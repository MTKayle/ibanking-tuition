spring.application.name=payment-service

# PostgreSQL connection
spring.datasource.url=jdbc:postgresql://localhost:5432/ibanking-tuition
spring.datasource.username=postgres
spring.datasource.password=postgres123

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.docker.compose.enabled=false

# Server port
server.port=8085

logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG

internal.api.token=SECRET_EMAIL_TOKEN_12345

# Kafka bootstrap servers
spring.kafka.bootstrap-servers=localhost:9092

# Producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Consumer configuration
spring.kafka.consumer.group-id=payment-service-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# ? Thêm c?u hình auto-create topics
spring.kafka.admin.auto-create=true
spring.kafka.admin.properties.bootstrap.servers=localhost:9092