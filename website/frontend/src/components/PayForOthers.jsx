import { useState } from 'react'
import { useNavigate } from 'react-router-dom'
import './PayForOthers.css'

function PayForOthers({ user, onLogout }) {
  const navigate = useNavigate()
  const [formData, setFormData] = useState({
    beneficiaryId: '',
    beneficiaryName: '',
    semester: '',
    amount: '',
    paymentMethod: 'bank'
  })
  const [showConfirm, setShowConfirm] = useState(false)
  const [success, setSuccess] = useState(false)
  const [error, setError] = useState('')

  // Mock data sinh vi√™n
  const mockStudents = {
    'SV001': 'Nguy·ªÖn VƒÉn A',
    'SV002': 'Tr·∫ßn Th·ªã B',
    'SV003': 'L√™ VƒÉn C',
    'SV004': 'Ph·∫°m Th·ªã D',
    'SV005': 'Ho√†ng VƒÉn E'
  }

  const tuitionFees = {
    '2024-1': 8000000,
    '2024-2': 8000000,
    '2024-3': 4000000
  }

  const formatCurrency = (amount) => {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND'
    }).format(amount)
  }

  const handleChange = (e) => {
    const { name, value } = e.target
    setError('')
    
    if (name === 'beneficiaryId') {
      const studentName = mockStudents[value] || ''
      setFormData({
        ...formData,
        beneficiaryId: value,
        beneficiaryName: studentName
      })
    } else if (name === 'semester') {
      setFormData({
        ...formData,
        semester: value,
        amount: tuitionFees[value] || ''
      })
    } else {
      setFormData({
        ...formData,
        [name]: value
      })
    }
  }

  const handleSubmit = (e) => {
    e.preventDefault()
    
    if (formData.beneficiaryId === user.studentId) {
      setError('Kh√¥ng th·ªÉ thanh to√°n h·ªô cho ch√≠nh m√¨nh. Vui l√≤ng s·ª≠ d·ª•ng t√≠nh nƒÉng "Thanh To√°n H·ªçc Ph√≠"')
      return
    }

    if (!formData.beneficiaryName) {
      setError('M√£ sinh vi√™n kh√¥ng t·ªìn t·∫°i trong h·ªá th·ªëng')
      return
    }

    if (formData.amount > user.balance) {
      setError('S·ªë d∆∞ kh√¥ng ƒë·ªß ƒë·ªÉ th·ª±c hi·ªán giao d·ªãch')
      return
    }

    setShowConfirm(true)
  }

  const handleConfirm = () => {
    setTimeout(() => {
      setShowConfirm(false)
      setSuccess(true)
      
      setTimeout(() => {
        navigate('/dashboard')
      }, 3000)
    }, 1500)
  }

  if (success) {
    return (
      <div className="pay-for-others-page">
        <nav className="navbar">
          <div className="nav-container">
            <h2>üéì H·ªá Th·ªëng Thanh To√°n</h2>
            <button onClick={onLogout} className="btn-logout">ƒêƒÉng xu·∫•t</button>
          </div>
        </nav>
        
        <div className="container">
          <div className="success-container">
            <div className="success-icon">‚úì</div>
            <h2>üéâ Thanh to√°n h·ªô th√†nh c√¥ng!</h2>
            <p>B·∫°n ƒë√£ thanh to√°n h·ªçc ph√≠ cho sinh vi√™n</p>
            <p className="beneficiary-name">{formData.beneficiaryName} ({formData.beneficiaryId})</p>
            <p className="success-amount">{formatCurrency(formData.amount)}</p>
            <p className="redirect-text">‚è±Ô∏è ƒêang chuy·ªÉn v·ªÅ trang ch·ªß...</p>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="pay-for-others-page">
      <nav className="navbar">
        <div className="nav-container">
          <h2>üéì H·ªá Th·ªëng Thanh To√°n</h2>
          <div className="nav-right">
            <span className="user-name">{user.name}</span>
            <button onClick={onLogout} className="btn-logout">ƒêƒÉng xu·∫•t</button>
          </div>
        </div>
      </nav>

      <div className="container">
        <button onClick={() => navigate('/dashboard')} className="btn-back">
          ‚Üê Quay l·∫°i
        </button>

        <div className="payment-card">
          <h2>ü§ù Thanh To√°n H·ªô Sinh Vi√™n Kh√°c</h2>
          <p className="subtitle">Ng∆∞·ªùi thanh to√°n: <strong>{user.name}</strong> ({user.studentId})</p>

          <form onSubmit={handleSubmit}>
            <div className="form-group">
              <label htmlFor="beneficiaryId">M√£ Sinh Vi√™n ƒê∆∞·ª£c Thanh To√°n H·ªô</label>
              <input
                type="text"
                id="beneficiaryId"
                name="beneficiaryId"
                value={formData.beneficiaryId}
                onChange={handleChange}
                placeholder="Nh·∫≠p m√£ sinh vi√™n"
                required
              />
              {formData.beneficiaryName && (
                <p className="student-name">T√™n: {formData.beneficiaryName}</p>
              )}
            </div>

            <div className="form-group">
              <label htmlFor="semester">H·ªçc K·ª≥</label>
              <select
                id="semester"
                name="semester"
                value={formData.semester}
                onChange={handleChange}
                required
              >
                <option value="">Ch·ªçn h·ªçc k·ª≥</option>
                <option value="2024-1">H·ªçc k·ª≥ 1 nƒÉm 2024 (8,000,000ƒë)</option>
                <option value="2024-2">H·ªçc k·ª≥ 2 nƒÉm 2024 (8,000,000ƒë)</option>
                <option value="2024-3">H·ªçc k·ª≥ h√® nƒÉm 2024 (4,000,000ƒë)</option>
              </select>
            </div>

            <div className="form-group">
              <label htmlFor="amount">S·ªë Ti·ªÅn</label>
              <input
                type="text"
                id="amount"
                name="amount"
                value={formData.amount ? formatCurrency(formData.amount) : ''}
                readOnly
                placeholder="Ch·ªçn h·ªçc k·ª≥ ƒë·ªÉ hi·ªÉn th·ªã s·ªë ti·ªÅn"
              />
            </div>

            <div className="form-group">
              <label htmlFor="paymentMethod">Ph∆∞∆°ng Th·ª©c Thanh To√°n</label>
              <select
                id="paymentMethod"
                name="paymentMethod"
                value={formData.paymentMethod}
                onChange={handleChange}
                required
              >
                <option value="bank">Chuy·ªÉn kho·∫£n ng√¢n h√†ng</option>
                <option value="ewallet">V√≠ ƒëi·ªán t·ª≠</option>
                <option value="card">Th·∫ª t√≠n d·ª•ng/ghi n·ª£</option>
              </select>
            </div>

            <div className="balance-info">
              <span>S·ªë d∆∞ c·ªßa b·∫°n:</span>
              <span className="balance">{formatCurrency(user.balance)}</span>
            </div>

            {error && <div className="error-message">{error}</div>}

            <button type="submit" className="btn-primary">
              X√°c nh·∫≠n thanh to√°n h·ªô
            </button>
          </form>

          <div className="info-box">
            <p><strong>üí° L∆∞u √Ω:</strong></p>
            <ul>
              <li>B·∫°n s·∫Ω thanh to√°n h·ªçc ph√≠ cho sinh vi√™n kh√°c</li>
              <li>S·ªë ti·ªÅn s·∫Ω ƒë∆∞·ª£c tr·ª´ t·ª´ t√†i kho·∫£n c·ªßa b·∫°n</li>
              <li>Giao d·ªãch kh√¥ng th·ªÉ ho√†n t√°c sau khi x√°c nh·∫≠n</li>
            </ul>
          </div>
        </div>
      </div>

      {showConfirm && (
        <div className="modal-overlay" onClick={() => setShowConfirm(false)}>
          <div className="modal-content" onClick={(e) => e.stopPropagation()}>
            <h3>X√°c nh·∫≠n thanh to√°n h·ªô</h3>
            <div className="confirm-details">
              <p><strong>Ng∆∞·ªùi thanh to√°n:</strong> {user.name} ({user.studentId})</p>
              <p><strong>Thanh to√°n cho:</strong> {formData.beneficiaryName} ({formData.beneficiaryId})</p>
              <p><strong>H·ªçc k·ª≥:</strong> {formData.semester}</p>
              <p><strong>S·ªë ti·ªÅn:</strong> {formatCurrency(formData.amount)}</p>
              <p><strong>Ph∆∞∆°ng th·ª©c:</strong> {
                formData.paymentMethod === 'bank' ? 'Chuy·ªÉn kho·∫£n ng√¢n h√†ng' :
                formData.paymentMethod === 'ewallet' ? 'V√≠ ƒëi·ªán t·ª≠' : 'Th·∫ª t√≠n d·ª•ng/ghi n·ª£'
              }</p>
            </div>
            <div className="modal-actions">
              <button onClick={() => setShowConfirm(false)} className="btn-secondary">
                H·ªßy
              </button>
              <button onClick={handleConfirm} className="btn-primary">
                X√°c nh·∫≠n
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}

export default PayForOthers

